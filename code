#!/data/data/com.termux/files/usr/bin/bash

# Sound paths
DOT_SOUND="$HOME/storage/downloads/dot.wav"
DASH_SOUND="$HOME/storage/downloads/dash.wav"

# Generate random colors for UI
colors=('\033[1;31m' '\033[1;32m' '\033[1;33m' '\033[1;34m' '\033[1;35m' '\033[1;36m' '\033[1;91m' '\033[1;92m' '\033[1;93m' '\033[1;94m' '\033[1;95m' '\033[1;96m')
shuffled_colors=($(printf "%s\n" "${colors[@]}" | shuf))
C1="${shuffled_colors[0]}"
C2="${shuffled_colors[1]}"
C3="${shuffled_colors[2]}"
C4="${shuffled_colors[3]}"
C5="${shuffled_colors[4]}"
NC='\033[0m'
YELLOW='\033[1;33m'
RED='\033[1;31m'

# Morse code maps
declare -A morse=(
  [A]=".-"   [B]="-..." [C]="-.-." [D]="-.."  [E]="."
  [F]="..-." [G]="--."  [H]="...." [I]=".."   [J]=".---"
  [K]="-.-"  [L]=".-.." [M]="--"   [N]="-."   [O]="---"
  [P]=".--." [Q]="--.-" [R]=".-."  [S]="..."  [T]="-"
  [U]="..-"  [V]="...-" [W]=".--"  [X]="-..-" [Y]="-.--" [Z]="--.."
  [0]="-----" [1]=".----" [2]="..---" [3]="...--" [4]="....-"
  [5]="....." [6]="-...." [7]="--..." [8]="---.." [9]="----."
  [" "]="/"
)

declare -A morse_rev
for k in "${!morse[@]}"; do
  morse_rev[${morse[$k]}]=$k
done

# Timings
intra_char_pause=0.15
inter_char_pause=0.4
inter_word_pause=0.8

# Banner
function banner() {
  clear
  echo -e "${C1}========================================${NC}"
  echo -e "${C2}        HAM RADIO MORSE CODE TOOL       ${NC}"
  echo -e "${C3}----------------------------------------${NC}"
  echo -e "${C4} Encode text to Morse and play beeps    ${NC}"
  echo -e "${C5} Decode Morse to text and speak it      ${NC}"
  echo -e "${C1}========================================${NC}"
  echo
}

# Encoder
function encode() {
  echo -ne "${C2}Enter a word or sentence to encode:${NC} "
  read input
  input=$(echo "$input" | tr 'a-z' 'A-Z')

  echo
  echo -e "${C3}=== Morse Code Conversion ===${NC}"
  echo

  morse_output=""
  for (( i=0; i<${#input}; i++ )); do
    char="${input:$i:1}"
    code=${morse[$char]}

    if [[ -n "$code" ]]; then
      if [[ "$char" == " " ]]; then
        echo -e "${C4}[space]${NC} => ${C3}/${NC}"
        morse_output+=" /"
      else
        formatted=""
        for (( j=0; j<${#code}; j++ )); do
          sym="${code:$j:1}"
          if [[ "$sym" == "." ]]; then
            formatted+="${YELLOW}${sym}${NC}"
            morse_output+="."
          elif [[ "$sym" == "-" ]]; then
            formatted+="${RED}${sym}${NC}"
            morse_output+="-"
          fi
        done
        echo -e "${C2}$char${NC} => $formatted"
        morse_output+=" "
      fi
    fi
  done

  echo
  echo -e "${C5}Playing Morse audio...${NC}"
  echo

  for (( i=0; i<${#input}; i++ )); do
    char="${input:$i:1}"
    code=${morse[$char]}
    if [ -z "$code" ]; then continue; fi

    for (( j=0; j<${#code}; j++ )); do
      symbol="${code:$j:1}"
      if [[ "$symbol" == "." ]]; then
        echo -e "${YELLOW}Now Playing: dot.wav${NC}"
        termux-media-player play "$DOT_SOUND"
        sleep $intra_char_pause
      elif [[ "$symbol" == "-" ]]; then
        echo -e "${RED}Now Playing: dash.wav${NC}"
        termux-media-player play "$DASH_SOUND"
        sleep $intra_char_pause
      fi
    done

    sleep $inter_char_pause
  done

  echo
  echo -e "${C4}Full Morse Output:${NC} $morse_output"
  echo
  echo -e "Press any key to return to menu..."
  read -n 1 -s
}

# Decoder
function decode() {
  echo -ne "${C2}Enter Morse code to decode (use spaces and / for word breaks):${NC} "
  read morse_input

  decoded=""
  IFS=' ' read -ra letters <<< "$morse_input"

  for code in "${letters[@]}"; do
    if [[ "$code" == "/" ]]; then
      decoded+=" "
    else
      letter=${morse_rev[$code]}
      if [[ -z "$letter" ]]; then
        decoded+="?"
      else
        decoded+="$letter"
      fi
    fi
  done

  echo
  echo -e "${C3}Decoded Text:${NC} ${C4}$decoded${NC}"
  echo -e "${C5}Speaking decoded message...${NC}"
  termux-tts-speak "$decoded"
  echo
  echo -e "Press any key to return to menu..."
  read -n 1 -s
}

# Main loop
while true; do
  banner
  echo -ne "${C3}Choose mode: ${C2}(E)ncode${NC}, ${C4}(D)ecode${NC}, ${C1}(Q)uit${NC}: "
  read mode
  mode=$(echo "$mode" | tr 'a-z' 'A-Z')

  case "$mode" in
    E)
      encode
      ;;
    D)
      decode
      ;;
    Q)
      echo -e "${C2}73s and stay curious!${NC} ${C5}â€“ Until next time!${NC}"
      exit 0
      ;;
    *)
      echo -e "${RED}Invalid option. Please choose E, D, or Q.${NC}"
      sleep 1
      ;;
  esac
done